cmake_minimum_required(VERSION 3.11.3)
project(CapStone VERSION 0.1.0)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
set(CMAKE_CXX_STANDARD 17)

include(CTest)
enable_testing()

list(APPEND CMAKE_PREFIX_PATH "/mnt/c/c/dev/vcpkg/installed/x64-linux")
#list(APPEND CMAKE_PREFIX_PATH "/home/workspace/vcpkg/vcpkg/installed/x64-linux")
find_package(OpenCV 4.1 REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
link_directories(${OpenCV_LIBRARY_DIRS})
add_definitions(${OpenCV_DEFINITIONS})

find_package(protobuf CONFIG REQUIRED)
find_package(CURL CONFIG REQUIRED)
find_package(unofficial-curlpp CONFIG REQUIRED)
find_package(jsoncpp CONFIG REQUIRED)

file(GLOB project_SRCS src/*.cpp)
add_executable(CapStone ${project_SRCS})
target_link_libraries(CapStone ${OpenCV_LIBRARIES})
target_link_libraries(CapStone protobuf::libprotoc protobuf::libprotobuf protobuf::libprotobuf-lite)
target_link_libraries(CapStone CURL::libcurl)
target_link_libraries(CapStone unofficial::curlpp::curlpp)
#target_link_libraries(CapStone jsoncpp_lib)
target_link_libraries(CapStone jsoncpp_object jsoncpp_static JsonCpp::JsonCpp)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)